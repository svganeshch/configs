$(document).ready(function() { $('[data-toggle="tooltip"]').tooltip(); var e, o, t, i, a, n, l, s = 0,
        r = 0,
        c = 0,
        d = 0,
        p = !1;

    function u(e, o, t) { var i = 0,
            a = !0; return $.each(e, function(e, n) { null != n && e == t && $.each(o, function(e, o) { n[i] == $("#" + o).val() && ($("#" + t + "_group" + o[o.length - 1]).addClass("has-error has-feedback").append('<span class="glyphicon glyphicon-remove form-control-feedback" id="field-error-icon"></span>'), $("#" + t + "_text_field" + o[o.length - 1]).focus(), i++, a = !1) }) }), a }

    function _() { $.ajax({ method: "POST", url: "jenkinsBlueFunc.php", data: { getBuildStatus: "yes" }, success: function(e) { $("#buildStatus").text(e), 0 == (e = e.trim()).localeCompare("building") || "true" == window.Morelog ? ($("#build-progress-bar").show(), $.ajax({ method: "POST", url: "jenkinsBlueFunc.php", data: { getProgressStatus: "yes" }, success: function(e) { e = e.trim(), $(".progress-bar").css("width", e + "%").attr("aria-valuenow", e).text(e + "%") } }), g()) : 0 == e.localeCompare("idle") && (window.idleLogSetShown || null != window.curTextSize && (window.curTextSize >= 1e3 && (window.curTextSize = window.curTextSize - 1e3, $("#fullLog").show(), g()), g())), window.jenkinsLooper = setTimeout(function() { _() }, 5e3) } }) }
    $.ajax({ url: "get_data.php", method: "GET" }).done(function(p) { var u = $.parseJSON(p),
            _ = 0;
        null != u && $.each(u, function(s, r) { $("#global_override").bootstrapToggle("yes" == r.global_override ? "on" : "off"), $("#is_official").bootstrapToggle("yes" == r.is_official ? "on" : "off"), $("#test_build").bootstrapToggle("yes" == r.test_build ? "on" : "off"), $("#force_clean").bootstrapToggle("yes" == r.force_clean ? "on" : "off"), $("#default_buildtype_state").bootstrapToggle("yes" == r.default_buildtype_state ? "on" : "off"), $("#buildtype").val(r.buildtype), $("#buildvariant").val(r.buildvariant), $("#bootimage").bootstrapToggle("yes" == r.bootimage ? "on" : "off"), $("#weeklies_opt").bootstrapToggle("yes" == r.weeklies_opt ? "on" : "off"), e = $.parseJSON(r.repo_paths), o = $.parseJSON(r.repo_clones), t = $.parseJSON(r.repo_clones_paths), i = $.parseJSON(r.repopick_topics), a = $.parseJSON(r.repopick_changes), n = r.changelog, l = r.xda_link }), null != e && "null" != e && "NULL" != e && $.each(e, function(e, o) { if (null != o && "null" != o && "NULL" != o)
                for (_ = 0; _ <= o.length - 1; _++) 0 != _ && 0 == $("#repo_paths_text_field" + _).length && $("#add1").trigger("click"), $("#repo_paths_text_field" + s).val(o[_]) }), null != o && "null" != o && "NULL" != o && $.each(o, function(e, o) { if (null != o && "null" != o && "NULL" != o)
                for (_ = 0; _ <= o.length - 1; _++) { 0 == $("#repo_clones_text_field" + _).length && $("#add2").trigger("click"); var t = o[_]; if (t.includes("-b")) { var i = t.split("-b");
                        $("#repo_clones_text_field" + r).val(i[0].trim()), $("#repo_clone_branch_text_field" + r).val(i[1].trim()) } else $("#repo_clones_text_field" + r).val(t) } }), null != t && "null" != t && "NULL" != t && $.each(t, function(e, o) { if (null != o && "null" != o && "NULL" != o)
                for (_ = 0; _ <= o.length - 1; _++) r = _, $("#repo_clones_paths_text_field" + r).val(o[_]) }), null != i && "null" != i && "NULL" != i && $.each(i, function(e, o) { if (null != o && "null" != o && "NULL" != o)
                for (_ = 0; _ <= o.length - 1; _++) 0 == $("#repopick_topics_text_field" + _).length && $("#add3").trigger("click"), $("#repopick_topics_text_field" + c).val(o[_]) }), null != a && "null" != a && "NULL" != a && $.each(a, function(e, o) { if (null != o && "null" != o && "NULL" != o)
                for (_ = 0; _ <= o.length - 1; _++) 0 == $("#repopick_changes_text_field" + _).length && $("#add4").trigger("click"), $("#repopick_changes_text_field" + d).val(o[_]) }), null != l && "null" != l && "NULL" != l ? $("#xda_link").val(l) : $("#xda_link").val(""), null != n && "null" != n && "NULL" != n ? $("#changelog").val(n) : $("#changelog").val("") }), $("body").on("click", "#add1", function() { s++, $("#dynamic_field-1-").append('<li class="list-group-item" style="border:none" id="dynamic_field-repo_paths' + s + '"><div class="row"><div class="col-md-11 col-xs-11" style="padding-left:0px"><div class="form-group" id="repo_paths_group' + s + '"><input autocomplete="on" type="text" id="repo_paths_text_field' + s + '" name="repo_paths[]" class="form-control" /></div></div><button type="button" name="remove" id="repo_paths' + s + '" class="btn btn-danger btn_remove" style="margin-top: 5px;">X</button></div></li>'), $("#repo_paths_text_field" + s).focus() }), $("body").on("click", "#add2", function() { r++, $("#dynamic_field-2-").append('<li class="list-group-item" style="border:none" id="dynamic_field-repo_clones' + r + '"><div class="row"><div class="col-md-11 col-xs-11" style="padding-left:0px"><div class="row"><div class="col-md-8 col-xs-8"><div class="form-group" id="repo_clones_group' + r + '"><input placeholder="repo url" autocomplete="on" type="text" id="repo_clones_text_field' + r + '" name="repo_clones[]" class="form-control" /></div></div><div class="col-md-4 col-xs-4"><div class="form-group" id="repo_clone_branch_group' + r + '"><input placeholder="branch" autocomplete="on" type="text" id="repo_clone_branch_text_field' + r + '" name="repo_clone_branch[]" class="form-control" /></div></div></div><br class="custom_br" id="custom_br"/><div class="form-group" id="repo_clones_paths_group' + r + '"><input placeholder="path for repo" autocomplete="on" type="text" id="repo_clones_paths_text_field' + r + '" name="repo_clones_paths[]" class="form-control" /></div></div><button type="button" name="remove" id="repo_clones' + r + '" class="btn btn-danger btn_remove" style="margin-top: 5px;">X</button></div></li>'), $("#repo_clones_text_field" + r).focus() }), $("body").on("click", "#add3", function() { c++, $("#dynamic_field-3-").append('<li class="list-group-item" style="border:none" id="dynamic_field-repopick_topics' + c + '"><div class="row"><div class="col-md-11 col-xs-11" style="padding-left:0px"><div class="form-group" id="repopick_topics_group' + c + '"><input autocomplete="on" type="text" id="repopick_topics_text_field' + c + '" name="repopick_topics[]" class="form-control" /></div></div><button type="button" name="remove" id="repopick_topics' + c + '" class="btn btn-danger btn_remove" style="margin-top: 5px;">X</button></div></li>'), $("#repopick_topics_text_field" + c).focus() }), $("body").on("click", "#add4", function() { d++, $("#dynamic_field-4-").append('<li class="list-group-item" style="border:none" id="dynamic_field-repopick_changes' + d + '"><div class="row"><div class="col-md-11 col-xs-11" style="padding-left:0px"><div class="form-group" id="repopick_changes_group' + d + '"><input autocomplete="on" type="text" id="repopick_changes_text_field' + d + '" name="repopick_changes[]" class="form-control" /></div></div><button type="button" name="remove" id="repopick_changes' + d + '" class="btn btn-danger btn_remove" style="margin-top: 5px;">X</button></div></li>'), $("#repopick_changes_text_field" + d).focus() }), $("#global_override").bootstrapToggle({ on: "Yes", off: "No", onstyle: "success", offstyle: "danger" }), $("body").on("change", "#global_override", function() { $(this).prop("checked") ? ($("#default_buildtype_state").trigger("change"), $("#hidden_global_override").val("yes"), $("#switch-block").show()) : ($("#default_buildtype_state").trigger("change"), $("#hidden_global_override").val("no"), $("#switch-block").hide()) }), $("#is_official").bootstrapToggle({ on: "Yes", off: "No", onstyle: "success", offstyle: "danger" }), $("body").on("change", "#is_official", function() { $(this).prop("checked") ? $("#hidden_is_official").val("yes") : $("#hidden_is_official").val("no") }), $("#test_build").bootstrapToggle({ on: "Yes", off: "No", onstyle: "success", offstyle: "danger" }), $("body").on("change", "#test_build", function() { $(this).prop("checked") ? $("#hidden_test_build").val("yes") : $("#hidden_test_build").val("no") }), $("#force_clean").bootstrapToggle({ on: "Yes", off: "No", onstyle: "success", offstyle: "danger" }), $("body").on("change", "#force_clean", function() { $(this).prop("checked") ? $("#hidden_force_clean").val("yes") : $("#hidden_force_clean").val("no") }), $("#default_buildtype_state").bootstrapToggle({ on: "Yes", off: "No", onstyle: "success", offstyle: "danger" }), $("body").on("change", "#default_buildtype_state", function() { $(this).prop("checked") ? ($("#hidden_default_buildtype_state").val("yes"), $("#buildtype_div").hide()) : ($("#hidden_default_buildtype_state").val("no"), $("#buildtype_div").show()) }), $("body").on("click", "#PipelineBuildTrigger", function() { $("#notifyDialog").modal({ backdrop: "static", keyboard: !1, show: !0 }), $("#notifyDialogData").text("Please wait...!"), $.ajax({ url: "jenkinsBlueFunc.php", method: "POST", data: { PipelineBuildTrigger: "yes" }, success: function(e) { e = e.trim(), $("#notifyDialogData").text(e), setTimeout(function() { $("#notifyDialog").modal("hide") }, 2e3) } }) }), $("#bootimage").bootstrapToggle({ on: "Yes", off: "No", onstyle: "success", offstyle: "danger" }), $("body").on("change", "#bootimage", function() { $(this).prop("checked") ? $("#hidden_bootimage").val("yes") : $("#hidden_bootimage").val("no") }), $("#weeklies_opt").bootstrapToggle({ on: "Opt In", off: "Opt Out", onstyle: "success", offstyle: "danger" }), $("body").on("change", "#weeklies_opt", function() { $(this).prop("checked") ? $("#hidden_weeklies_opt").val("yes") : $("#hidden_weeklies_opt").val("no") }), $(document).on("click", ".btn_remove", function() { var e = $(this).attr("id");
        $("#dynamic_field-" + e).remove() }), $("body").on("click", "#submit", function() { if ($("#notifyDialog").modal({ backdrop: "static", keyboard: !1, show: !0 }), $.ajax({ async: !1, url: "validateFields.php", method: "POST", data: $("#device_changes").serialize(), success: function(e) { var o = $.parseJSON(e),
                        t = $("input[name='repo_paths[]']").map(function() { return $(this).attr("id") }).get();
                    $("[id^=repo_paths_group]").removeClass("has-error has-feedback"); var i = $("input[name='repo_clones[]']").map(function() { return $(this).attr("id") }).get();
                    $("[id^=repo_clones_group]").removeClass("has-error has-feedback"); var a = $("input[name='repo_clone_branch[]']").map(function() { return $(this).attr("id") }).get();
                    $("[id^=repo_clone_branch_group]").removeClass("has-error has-feedback"); var n = $("input[name='repo_clones_paths[]']").map(function() { return $(this).attr("id") }).get();
                    $("[id^=repo_clones_paths_group]").removeClass("has-error has-feedback"); var l = $("input[name='repopick_topics[]']").map(function() { return $(this).attr("id") }).get();
                    $("[id^=repopick_topics_group]").removeClass("has-error has-feedback"); var s = $("input[name='repopick_changes[]']").map(function() { return $(this).attr("id") }).get();
                    $("[id^=repopick_changes_group]").removeClass("has-error has-feedback"), $("span[id^=field-error-icon]").remove(), is_rp_ok = u(o, t, "repo_paths"), is_rcd_ok = u(o, i, "repo_clones"), is_rcb_ok = u(o, a, "repo_clone_branch"), is_rcp_ok = u(o, n, "repo_clones_paths"), is_rptp_ok = u(o, l, "repopick_topics"), is_rpc_ok = u(o, s, "repopick_changes"), p = is_rp_ok && is_rcd_ok && is_rcb_ok && is_rcp_ok && is_rptp_ok && is_rpc_ok } }), !p) return $("#notifyDialogData").text("Invalid data...!!"), void setTimeout(function() { $("#notifyDialog").modal("hide") }, 800);
        $("#notifyDialogData").text("Please wait...!"), $.ajax({ url: "send_data.php", method: "POST", data: $("#device_changes").serialize(), success: function(e) { e = e.trim(), $("#notifyDialogData").text(e), setTimeout(function() { $("#notifyDialog").modal("hide") }, 2e3) } }) }), $("body").on("click", "#buildTrigger", function() { $("#submit").trigger("click"), p && ($("#notifyDialog").modal({ backdrop: "static", keyboard: !1, show: !0 }), $("#notifyDialogData").text("Please wait...!"), $.ajax({ async: !1, url: "jenkinsBlueFunc.php", method: "POST", data: { buildTrigger: "yes" }, success: function(e) { $("#buildOutput").empty(), e = e.trim(), $("#notifyDialogData").text(e), setTimeout(function() { $("#notifyDialog").modal("hide") }, 2e3) } })) }), $("body").on("click", "#buildRemoveQueue", function() { $("#notifyDialog").modal({ backdrop: "static", keyboard: !1, show: !0 }), $("#notifyDialogData").text("Please wait...!"), $.ajax({ url: "jenkinsBlueFunc.php", method: "POST", data: { buildRemoveQueue: "yes" }, success: function(e) { e = e.trim(), $("#notifyDialogData").text(e), setTimeout(function() { $("#notifyDialog").modal("hide") }, 2e3) } }) }), $("body").on("click", "#buildStop", function() { $("#notifyDialog").modal({ backdrop: "static", keyboard: !1, show: !0 }), $("#notifyDialogData").text("Please wait...!"), $.ajax({ url: "jenkinsBlueFunc.php", method: "POST", data: { buildStop: "yes" }, success: function(e) { e = e.trim(), $("#notifyDialogData").text(e), setTimeout(function() { $("#notifyDialog").modal("hide") }, 2e3) } }) }), $("#build-progress-bar").hide(), "Common_config config:" != f && $.ajax({ method: "POST", url: "jenkinsBlueFunc.php", data: { getHeaderTextSize: "yes" }, success: function(e) { if (null != e) { var o = JSON.parse(e);
                window.curTextSize = Number(o["x-text-size"]) } } }); var f = $("#config_dev_name").text().trim();

    function g() { window.idleLogSetShown = !0, $.ajax({ method: "POST", url: "jenkinsBlueFunc.php", data: { getBodyOutput: "yes", headerTextSize: window.curTextSize }, success: function(e) { if (null != e) { var o = JSON.parse(e),
                        t = JSON.parse(o.headers),
                        i = o.body; if (window.Morelog = ["x-more-data"] in t && t["x-more-data"], Number(window.curTextSize) == Number(t["x-text-size"])) return;
                    window.curTextSize = Number(t["x-text-size"]), $("#buildOutput").append('<p id="logs">' + i + "</p>"), $("#buildOutput").is(":hover") || $("#buildOutput").scrollTop($("#buildOutput").prop("scrollHeight")) } } }) } "Common_config config:" != f && _(), $("body").on("click", "#fullLog", function() { $.ajax({ url: "jenkinsBlueFunc.php", method: "POST", data: { getBodyOutput: "yes", headerTextSize: 0 }, success: function(e) { if (null != e) { clearTimeout(window.jenkinsLooper); var o = JSON.parse(e),
                        t = JSON.parse(o.headers),
                        i = o.body;
                    window.curTextSize = Number(t["x-text-size"]), $("#buildOutput").empty(), $("#buildOutput").append('<p id="logs">' + i + "</p>"), _() } } }) }), $("body").on("click", "#reset-hard", function() { $("#is_official").bootstrapToggle("on"), $("#test_build").bootstrapToggle("off"), $("#force_clean").bootstrapToggle("off"), $("#buildtype").val("userdebug"), $("#buildvariant").val("vanilla"), $("#bootimage").bootstrapToggle("off"), $("#weeklies_opt").bootstrapToggle("on"), $("default_buildtype_state").bootstrapToggle("on") }) });